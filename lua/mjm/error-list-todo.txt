Use the bottom strategy for posting notes rather than the top

--------------------
--- PROJECT WIDE ---
--------------------

TODO

- Not totally sure how to map commands. If they're in a separate file, then requires need to be
done for everything. Maybe use defer require?
- Maybe put all keymaps into one file so only one needs to be required. Perhaps also think about
when certain maps need to be required at all
- Any load behavior needs to be checked against mksession
- I think we use qQ as our view or jump, rather than q<C-q>. Merge the two in nav action and stack
- I have the maps file as a separate file for now simply for sanity, but in order to save a
require it might be best to just put it in plugin.lua
- Purely internal stuff should not involve error handling
- Create a way to send the quickfix list to a normal buffer, and allow specifying which elements you want to bring over. Found this use case when trying to move over todo list stuff
- Make a way to copy lists. The filter code should mostly get you there
- Make the autoopen changes var actually do something
- Should be able to control if you want your regex to be case sensitive or not. Would be good alt
maps but compatibilty and such
- Document what regex is used where. Ext programs use their regex. Filter stuff uses vim regex
- In general, titling is weak
- When grepping specific buf to replace, get error invalid $chistory. Bad buf numbering
- When everything is actually in the final directory structure, do one last check to make sure no eager requires happen
- For the various modules, if you make a custom filter, it should be possible to register it so it can be used as a command. You should be able to do Qfilter myFilter and it should work
- The current method of building keymaps could be improved, either by generating the file and/or using a DoD approach to build using a "struct of arrays" rather than the current "array of structs"
- Anything related to view saving needs to be behind an option because of splitkeep, or at the very least respect splitkeep
- Do we need to fire off QfCmd autocmds?
- For merges, what actually happens if we run it without a count? Does it create dups?
- Make sure typing is right everywhere, especially with custom function types
- Exposed functions are supported APIs. Exposed functions starting with an underline are not supported

MAYBE

If we get to 1k keymaps, I'll look at how to do a DoD setup. I think what you would need to do is autogen the file so that way you know everything is correct

---------------------
--- DOCUMENTATION ---
---------------------

- The filter provides a replacement for the cfilter plugin, so that no longer needs to be added
- The cn/cpfile logic does not have the same level of wrapping logic as the cc wrapper
- The open functions double as resizers, as per the built-in cmd behavior
- None of the commands accept ranges

-------------------
--- DIAGNOSTICS ---
-------------------

TODO

- Check that all functions have reasonable default sorts
- Check that window height updates are triggered where appropriate
- Check that functions have proper visibility
- Check that all mappings have plugs and cmds
- Check that all maps/cmds/plugs have desc fieldss
- Check that all functions have annotations and documentation
- Check that the qf and loclist versions are both properly built for purpose. Should be able to use the loclist function for buf/win specific info

MAYBE

- You could allow passing win and buf options so this option could be called in scripts, but that creates complexities around how you prioritize the different options. Omitting since for now this is a hypothetical use case
- Ideas for ctrl+diag_type mappings:
    - Min severity + sort by type > lnum (sort maps already exist though)
    - Use the diag type as the max severity

LOW

- Print specific "no diagnostics" messages based on the opts

PERF

- The diagnostic severities are mapped when the raw diags are converted, then de-mapped when sorting. Would be faster to not map initially, then do a mapping pass after sorting

--------------
--- FILTER ---
--------------

TODO

- The wrapper function should not be public
- Check that all functions have reasonable default sorts
- Check that window height updates are triggered where appropriate
- Check that functions have proper visibility
- Check that all mappings have plugs and cmds
- Check that all maps/cmds/plugs have desc fieldss
- Check that all functions have annotations and documentation
- Check that the qf and loclist versions are both properly built for purpose. Should be able to use the loclist function for buf/win specific info
- Filter dotfiles/hidden files
- Filter on diagnostic severity
- The regex maps should be on ctrl like grep. And then caps can be case sensitive
- TODO: Improve title
- Should work in visual/cmd mode on a range. Can highlight a word or phrase or whatever
- It would be good to outline the looping logic, since it's the same in basically every function, but I don't know how to make the predicate table work because it's unique to each one, and you can't just like do it the first time because it's per item. I suppose you could store the table externally and then do like a thing that takes in the predicate function, new items, whatever. But it creates a rather tacky "helper" function that takes in a lot of data from the caller
- For the public API, show making diagnostic filters as examples

LOW

- Filter anything without a line/col number

DOCUMENT

- Filter smartcase respects the smartcase opt
- If no count is entered, the current list will be replaced with the filtered list. If a count
is specified, a new, replacement, or add list will be created at the count as specified. The
source list for the filter is always the current one

----------------
--- FTPLUGIN ---
----------------

TODO

- When doing qq inside of a location list, fails on validate

------------------
--- NAV ACTION ---
------------------

TODO

- Check that window height updates are triggered where appropriate
- Check that functions have proper visibility
- Check that all mappings have plugs and cmds
- Check that all maps/cmds/plugs have desc fieldss
- Check that all functions have annotations and documentation
- Check that the qf and loclist versions are both properly built for purpose. Should be able to use the loclist function for buf/win specific info

- Hold on refactoring the jump functions until I know what we're doing with them. Still need to figure out how they co-exist with the qQ mapping
- If you do [q]q on an empty list, it enter errors

-------------
--- STACK ---
-------------

--- Document - For the delete commands, all overrides count

--------------
--- SYSTEM ---
--------------

TODO

- Don't pass in the cmd_parts function. Just pass in the cmd parts
